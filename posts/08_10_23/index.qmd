---
title: "Text-mining PLOS articles using R"
author:
  - name: Pablo Gómez Barreiro
    orcid: 0000-0002-3140-3326
date: "2023-10-08"
categories: [PLOS, R, Text-mining, The Strain on Scientific Publishing]
image: "thumbn.jpg"
draft: FALSE
comments:
  utterances: 
    repo: quarto-dev/quarto-web
    theme: github-light
    issue-term: title
---

On a recent preprint ([The Strain on Scientific Publishing](https://arxiv.org/abs/2309.15884)) we used diverse methods to web-scrap and text-mine millions of scientific articles, with emphasis in editorial times and special issues.

One of the easiest data sets to obtain comes from [PLOS](https://plos.org/) (Public Library of Science), a publisher that encourages the use of text-mining on their articles. Other publishing houses do this too, but PLOS goes beyond and provides a link to download their whole corpus ([Link here](https://plos.org/text-and-data-mining/)), encouraging people to share the results using the hashtag `#allofplos`. This blog intends to be a step by step tutorial to text-mine PLOS data using R. I´m fairly sure there are ways to improve the efficiency of this methods. Let me know if you have one!

### Step 1: Download the data

Head to PLOS text-mining section [here](https://plos.org/text-and-data-mining/ "click here to head to PLOS text-mining section") and click the button `Download Every PLOS article`. As of Oct 23, this is a 7.7Gb .zip file, meaning that depending on the download speed you might have to wait for a while. It´s ok, I´ll see you in **Step 2**!

[![PLOS corpus download button - screenshoot](plos_web_capture.PNG){fig-alt="PLOS corpus download button screenshoot" fig-align="center"}](https://plos.org/text-and-data-mining/)

### Step 2: Unzipping

Time to unzip the file `allofplos.zip` .This again, is going to take some time. You can unzip a file using R with the function `utils::unzip()` . Keep in mind the uncompressed file is going to take at least 37 Gb of space in your disk!

While we are here waiting, you can already see the name of each article file contains useful information. In the image below we see the file `journal.pone.0241922.xml` . The code "pone" means this particular article belongs to the jorunal PLOS ONE. If later you want to extract the journal code, you can use the R function `gsub()` in the file name. We won´t do this here, as we intend to extract the journal name directly from the .xml file.

![Unzipping allofplos.zip might take some time\... - screenshot](unzip_caption.PNG){fig-align="center"}

### Step 3: Warm up / text-mining one article

We are going to be using R packages `rvest` (for text-mining) and some of the packages contained in the `tidyverse` (e.g.`dplyr`, `magrittr`, `lubridate`, `stringr`) for data wrangling and processing.`setwd("C:/Users/YOUR_USER/Downloads/allofplos")`.

Let´s pick up an article to play with. For example this article from PLOS ONE: [Typology, network features and damage response in worldwide urban road systems](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0264546). We are going to collect information on editorial times (when was the article submitted and accepted) and whether if it belongs or not to a collection issue.

To do so, we are going to target the "nodes" where the information is contained. This article can be found in the `allofplos`. Search for the file `journal.pone.0264546.xml` and open it with Notepad. Here you will find all the information on the website is available in text format. For example, the journal name is within the node `<journal-id journal-id-type="nlm-ta">PLoS ONE</journal-id>` , confirmation of this article being part of a collection can be found here: `<pub-date pub-type="collection">` , and editorial times (received and accepted) can be found at `<date date-type="received">` and `<date date-type="accepted">`, respectively. Let´s get to work:

Hanson, M. A., Gómez Barreiro, P., Crosetto, P., & Brockington, D. (2023). *arXiv*. The Strain on Scientific Publishing. <https://arxiv.org/abs/2309.15884>

Wickham H (2022). rvest: Easily Harvest (Scrape) Web Pages. R package version 1.0.3. <https://CRAN.R-project.org/package=rvest>

Wickham H, et al. (2019) "Welcome to the tidyverse." *Journal of Open Source Software*, 4 (43), 1686. doi: <https://doi.org/10.21105/joss.01686>
